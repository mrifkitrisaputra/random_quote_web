{
    "sourceFile": "frontend/src/pages/pollDetailPage.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1747278537456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747278564929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,87 +0,0 @@\n-import React, { useState } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const VoteForm = ({ pollID }) => {\r\n-    const [selectedOption, setSelectedOption] = useState('');\r\n-    const [userKey, setUserKey] = useState(localStorage.getItem(`user_key_${pollID}`) || '');\r\n-    const [voted, setVoted] = useState(false);\r\n-    const [error, setError] = useState('');\r\n-\r\n-    const handleSubmit = async (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        if (!selectedOption) {\r\n-            setError(\"Silakan pilih salah satu opsi\");\r\n-            return;\r\n-        }\r\n-\r\n-        try {\r\n-            const response = await axios.post(`/api/polls/${pollID}/vote`, {\r\n-                option_id: parseInt(selectedOption),\r\n-                user_key: userKey || generateUserKey(),\r\n-            });\r\n-\r\n-            if (response.status === 200) {\r\n-                alert(\"Terima kasih atas suaramu!\");\r\n-                setVoted(true);\r\n-            }\r\n-        } catch (err) {\r\n-            setError(err.response?.data?.error || \"Gagal memberikan suara\");\r\n-        }\r\n-    };\r\n-\r\n-    const generateUserKey = () => {\r\n-        const key = `user_${Date.now()}`;\r\n-        localStorage.setItem(`user_key_${pollID}`, key);\r\n-        setUserKey(key);\r\n-        return key;\r\n-    };\r\n-\r\n-    const options = [\r\n-        { id: 1, text: \"Sangat Baik\" },\r\n-        { id: 2, text: \"Baik\" },\r\n-        { id: 3, text: \"Biasa Saja\" },\r\n-        { id: 4, text: \"Buruk\" }\r\n-    ];\r\n-\r\n-    return (\r\n-        <div className=\"max-w-md mx-auto mt-6 p-4 bg-white shadow rounded\">\r\n-            <h2 className=\"text-xl font-bold mb-4\">Berikan Suaramu</h2>\r\n-            \r\n-            <form onSubmit={handleSubmit}>\r\n-                {options.map((option) => (\r\n-                    <div key={option.id} className=\"mb-2\">\r\n-                        <label className=\"flex items-center gap-2\">\r\n-                            <input\r\n-                                type=\"radio\"\r\n-                                name=\"voteOption\"\r\n-                                value={option.id}\r\n-                                onChange={(e) => {\r\n-                                    setSelectedOption(e.target.value);\r\n-                                    setError(\"\");\r\n-                                }}\r\n-                                disabled={voted}\r\n-                                className=\"w-4 h-4\"\r\n-                            />\r\n-                            <span>{option.text}</span>\r\n-                        </label>\r\n-                    </div>\r\n-                ))}\r\n-\r\n-                {error && <p className=\"mt-2 text-red-500\">{error}</p>}\r\n-\r\n-                <button\r\n-                    type=\"submit\"\r\n-                    disabled={voted}\r\n-                    className={`mt-4 w-full py-2 px-4 ${\r\n-                        voted ? 'bg-gray-400' : 'bg-blue-600 hover:bg-blue-700'\r\n-                    } text-white rounded`}\r\n-                >\r\n-                    {voted ? \"Suara Telah Dikirim\" : \"Kirim Suara\"}\r\n-                </button>\r\n-            </form>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default VoteForm;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747278580391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import React, { useEffect, useState } from 'react';\r\n+import { useParams } from 'react-router-dom';\r\n+import VoteForm from '../components/VoteForm';\r\n+\r\n+const PollDetailPage = () => {\r\n+    const { id } = useParams();\r\n+    const [pollData, setPollData] = useState(null);\r\n+\r\n+    useEffect(() => {\r\n+        const fetchData = async () => {\r\n+            const res = await axios.get(`/api/polls/${id}`);\r\n+            setPollData(res.data.poll);\r\n+        };\r\n+        fetchData();\r\n+    }, [id]);\r\n+\r\n+    if (!pollData) return <p>Loading...</p>;\r\n+\r\n+    return (\r\n+        <div className=\"p-6\">\r\n+            <h1 className=\"text-2xl font-bold\">{pollData.title}</h1>\r\n+            <p className=\"mt-2\">{pollData.description}</p>\r\n+\r\n+            <VoteForm pollID={pollData.id} />\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default PollDetailPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747278715775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,62 @@\n import React, { useEffect, useState } from 'react';\r\n+import axios from 'axios';\r\n import { useParams } from 'react-router-dom';\r\n import VoteForm from '../components/VoteForm';\r\n+import PollResultChart from '../components/PollResultChart';\r\n \r\n const PollDetailPage = () => {\r\n     const { id } = useParams();\r\n     const [pollData, setPollData] = useState(null);\r\n+    const [canSeeResults, setCanSeeResults] = useState(false);\r\n+    const [results, setResults] = useState([]);\r\n+    const [options, setOptions] = useState([]);\r\n \r\n     useEffect(() => {\r\n         const fetchData = async () => {\r\n-            const res = await axios.get(`/api/polls/${id}`);\r\n-            setPollData(res.data.poll);\r\n+            try {\r\n+                const res = await axios.get(`/api/polls/${id}`);\r\n+                setPollData(res.data.poll);\r\n+                setOptions(res.data.options);\r\n+\r\n+                const canSee = res.data.can_see_results;\r\n+                setCanSeeResults(canSee);\r\n+\r\n+                if (canSee) {\r\n+                    const resultRes = await axios.get(`/api/polls/${id}/export`);\r\n+                    setResults(resultRes.data.results || []);\r\n+                }\r\n+            } catch (err) {\r\n+                alert(\"Polling tidak ditemukan\");\r\n+                window.location.href = \"/\";\r\n+            }\r\n         };\r\n+\r\n         fetchData();\r\n     }, [id]);\r\n \r\n     if (!pollData) return <p>Loading...</p>;\r\n \r\n     return (\r\n-        <div className=\"p-6\">\r\n-            <h1 className=\"text-2xl font-bold\">{pollData.title}</h1>\r\n-            <p className=\"mt-2\">{pollData.description}</p>\r\n+        <div className=\"min-h-screen bg-white p-6\">\r\n+            <div className=\"max-w-3xl mx-auto\">\r\n+                <h1 className=\"text-2xl font-bold mb-4\">{pollData.poll.title}</h1>\r\n+                <p className=\"mb-6\">{pollData.poll.description}</p>\r\n \r\n-            <VoteForm pollID={pollData.id} />\r\n+                {/* Form Voting */}\r\n+                <div className=\"mb-8\">\r\n+                    <h2 className=\"text-xl font-medium mb-4\">Pilih Jawaban:</h2>\r\n+                    <VoteForm pollID={id} />\r\n+                </div>\r\n+\r\n+                {/* Tampilkan Hasil jika izin diberikan */}\r\n+                {canSeeResults && (\r\n+                    <div>\r\n+                        <h2 className=\"text-xl font-medium mb-4\">Hasil Polling</h2>\r\n+                        <PollResultChart results={results} />\r\n+                    </div>\r\n+                )}\r\n+            </div>\r\n         </div>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1747279239213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,63 @@\n+import React, { useEffect, useState } from 'react';\r\n+import axios from 'axios';\r\n+import { useParams } from 'react-router-dom';\r\n+import VoteForm from '../components/VoteForm';\r\n+import PollResultChart from '../assets/components/PollResultChart';\r\n+\r\n+const PollDetailPage = () => {\r\n+    const { id } = useParams();\r\n+    const [pollData, setPollData] = useState(null);\r\n+    const [canSeeResults, setCanSeeResults] = useState(false);\r\n+    const [results, setResults] = useState([]);\r\n+    const [options, setOptions] = useState([]);\r\n+\r\n+    useEffect(() => {\r\n+        const fetchData = async () => {\r\n+            try {\r\n+                const res = await axios.get(`/api/polls/${id}`);\r\n+                setPollData(res.data.poll);\r\n+                setOptions(res.data.options);\r\n+\r\n+                const canSee = res.data.can_see_results;\r\n+                setCanSeeResults(canSee);\r\n+\r\n+                if (canSee) {\r\n+                    const resultRes = await axios.get(`/api/polls/${id}/export`);\r\n+                    setResults(resultRes.data.results || []);\r\n+                }\r\n+            } catch (err) {\r\n+                alert(\"Polling tidak ditemukan\");\r\n+                window.location.href = \"/\";\r\n+            }\r\n+        };\r\n+\r\n+        fetchData();\r\n+    }, [id]);\r\n+\r\n+    if (!pollData) return <p>Loading...</p>;\r\n+\r\n+    return (\r\n+        <div className=\"min-h-screen bg-white p-6\">\r\n+            <div className=\"max-w-3xl mx-auto\">\r\n+                <h1 className=\"text-2xl font-bold mb-4\">{pollData.poll.title}</h1>\r\n+                <p className=\"mb-6\">{pollData.poll.description}</p>\r\n+\r\n+                {/* Form Voting */}\r\n+                <div className=\"mb-8\">\r\n+                    <h2 className=\"text-xl font-medium mb-4\">Pilih Jawaban:</h2>\r\n+                    <VoteForm pollID={id} />\r\n+                </div>\r\n+\r\n+                {/* Tampilkan Hasil jika izin diberikan */}\r\n+                {canSeeResults && (\r\n+                    <div>\r\n+                        <h2 className=\"text-xl font-medium mb-4\">Hasil Polling</h2>\r\n+                        <PollResultChart results={results} />\r\n+                    </div>\r\n+                )}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default PollDetailPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747279418265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n import { useParams } from 'react-router-dom';\r\n-import VoteForm from '../components/VoteForm';\r\n-import PollResultChart from '../assets/components/PollResultChart';\r\n+import VoteForm from '../assetscomponents/VoteForm';\r\n+import PollResultChart from '../assets/components/pollResultChart';\r\n \r\n const PollDetailPage = () => {\r\n     const { id } = useParams();\r\n     const [pollData, setPollData] = useState(null);\r\n@@ -59,68 +59,5 @@\n         </div>\r\n     );\r\n };\r\n \r\n-export default PollDetailPage;\n-import React, { useEffect, useState } from 'react';\r\n-import axios from 'axios';\r\n-import { useParams } from 'react-router-dom';\r\n-import VoteForm from '../components/VoteForm';\r\n-import PollResultChart from '../components/PollResultChart';\r\n-\r\n-const PollDetailPage = () => {\r\n-    const { id } = useParams();\r\n-    const [pollData, setPollData] = useState(null);\r\n-    const [canSeeResults, setCanSeeResults] = useState(false);\r\n-    const [results, setResults] = useState([]);\r\n-    const [options, setOptions] = useState([]);\r\n-\r\n-    useEffect(() => {\r\n-        const fetchData = async () => {\r\n-            try {\r\n-                const res = await axios.get(`/api/polls/${id}`);\r\n-                setPollData(res.data.poll);\r\n-                setOptions(res.data.options);\r\n-\r\n-                const canSee = res.data.can_see_results;\r\n-                setCanSeeResults(canSee);\r\n-\r\n-                if (canSee) {\r\n-                    const resultRes = await axios.get(`/api/polls/${id}/export`);\r\n-                    setResults(resultRes.data.results || []);\r\n-                }\r\n-            } catch (err) {\r\n-                alert(\"Polling tidak ditemukan\");\r\n-                window.location.href = \"/\";\r\n-            }\r\n-        };\r\n-\r\n-        fetchData();\r\n-    }, [id]);\r\n-\r\n-    if (!pollData) return <p>Loading...</p>;\r\n-\r\n-    return (\r\n-        <div className=\"min-h-screen bg-white p-6\">\r\n-            <div className=\"max-w-3xl mx-auto\">\r\n-                <h1 className=\"text-2xl font-bold mb-4\">{pollData.poll.title}</h1>\r\n-                <p className=\"mb-6\">{pollData.poll.description}</p>\r\n-\r\n-                {/* Form Voting */}\r\n-                <div className=\"mb-8\">\r\n-                    <h2 className=\"text-xl font-medium mb-4\">Pilih Jawaban:</h2>\r\n-                    <VoteForm pollID={id} />\r\n-                </div>\r\n-\r\n-                {/* Tampilkan Hasil jika izin diberikan */}\r\n-                {canSeeResults && (\r\n-                    <div>\r\n-                        <h2 className=\"text-xl font-medium mb-4\">Hasil Polling</h2>\r\n-                        <PollResultChart results={results} />\r\n-                    </div>\r\n-                )}\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n export default PollDetailPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747279491073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect, useState } from 'react';\r\n import axios from 'axios';\r\n import { useParams } from 'react-router-dom';\r\n-import VoteForm from '../assetscomponents/VoteForm';\r\n-import PollResultChart from '../assets/components/pollResultChart';\r\n+import VoteForm from '../components/voteForm';\r\n+import PollResultChart from '../components/pollResultChart';\r\n \r\n const PollDetailPage = () => {\r\n     const { id } = useParams();\r\n     const [pollData, setPollData] = useState(null);\r\n"
                },
                {
                    "date": 1747280686633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,28 @@\n import React, { useEffect, useState } from 'react';\r\n-import axios from 'axios';\r\n import { useParams } from 'react-router-dom';\r\n-import VoteForm from '../components/voteForm';\r\n-import PollResultChart from '../components/pollResultChart';\r\n+import { getPollDetails, exportPollResults } from '../services/api';\r\n+import PollResultChart from '../components/PollResultChart';\r\n \r\n const PollDetailPage = () => {\r\n     const { id } = useParams();\r\n     const [pollData, setPollData] = useState(null);\r\n     const [canSeeResults, setCanSeeResults] = useState(false);\r\n     const [results, setResults] = useState([]);\r\n-    const [options, setOptions] = useState([]);\r\n \r\n     useEffect(() => {\r\n         const fetchData = async () => {\r\n             try {\r\n-                const res = await axios.get(`/api/polls/${id}`);\r\n-                setPollData(res.data.poll);\r\n-                setOptions(res.data.options);\r\n+                const data = await getPollDetails(id);\r\n+                setPollData(data);\r\n \r\n-                const canSee = res.data.can_see_results;\r\n+                // Cek apakah bisa lihat hasil\r\n+                const canSee = data.can_see_results;\r\n                 setCanSeeResults(canSee);\r\n \r\n                 if (canSee) {\r\n-                    const resultRes = await axios.get(`/api/polls/${id}/export`);\r\n-                    setResults(resultRes.data.results || []);\r\n+                    const resultData = await exportPollResults(id);\r\n+                    setResults(resultData);\r\n                 }\r\n             } catch (err) {\r\n                 alert(\"Polling tidak ditemukan\");\r\n                 window.location.href = \"/\";\r\n@@ -41,21 +39,26 @@\n             <div className=\"max-w-3xl mx-auto\">\r\n                 <h1 className=\"text-2xl font-bold mb-4\">{pollData.poll.title}</h1>\r\n                 <p className=\"mb-6\">{pollData.poll.description}</p>\r\n \r\n-                {/* Form Voting */}\r\n+                {/* Voting Form */}\r\n                 <div className=\"mb-8\">\r\n                     <h2 className=\"text-xl font-medium mb-4\">Pilih Jawaban:</h2>\r\n-                    <VoteForm pollID={id} />\r\n+                    {pollData.options.map((opt) => (\r\n+                        <div key={opt.id} className=\"mb-2\">\r\n+                            <label className=\"flex items-center gap-2\">\r\n+                                <input type=\"radio\" name=\"vote\" value={opt.id} />\r\n+                                {opt.text}\r\n+                            </label>\r\n+                        </div>\r\n+                    ))}\r\n+                    <button className=\"mt-4 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\">\r\n+                        Kirim Suara\r\n+                    </button>\r\n                 </div>\r\n \r\n-                {/* Tampilkan Hasil jika izin diberikan */}\r\n-                {canSeeResults && (\r\n-                    <div>\r\n-                        <h2 className=\"text-xl font-medium mb-4\">Hasil Polling</h2>\r\n-                        <PollResultChart results={results} />\r\n-                    </div>\r\n-                )}\r\n+                {/* Hasil Polling */}\r\n+                {canSeeResults && <PollResultChart results={results} />}\r\n             </div>\r\n         </div>\r\n     );\r\n };\r\n"
                },
                {
                    "date": 1747280830796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,66 @@\n+import React, { useEffect, useState } from 'react';\r\n+import { useParams } from 'react-router-dom';\r\n+import { getPollDetails, exportPollResults } from '../services/api';\r\n+import PollResultChart from '../components/pollResultChart';\r\n+\r\n+const PollDetailPage = () => {\r\n+    const { id } = useParams();\r\n+    const [pollData, setPollData] = useState(null);\r\n+    const [canSeeResults, setCanSeeResults] = useState(false);\r\n+    const [results, setResults] = useState([]);\r\n+\r\n+    useEffect(() => {\r\n+        const fetchData = async () => {\r\n+            try {\r\n+                const data = await getPollDetails(id);\r\n+                setPollData(data);\r\n+\r\n+                // Cek apakah bisa lihat hasil\r\n+                const canSee = data.can_see_results;\r\n+                setCanSeeResults(canSee);\r\n+\r\n+                if (canSee) {\r\n+                    const resultData = await exportPollResults(id);\r\n+                    setResults(resultData);\r\n+                }\r\n+            } catch (err) {\r\n+                alert(\"Polling tidak ditemukan\");\r\n+                window.location.href = \"/\";\r\n+            }\r\n+        };\r\n+\r\n+        fetchData();\r\n+    }, [id]);\r\n+\r\n+    if (!pollData) return <p>Loading...</p>;\r\n+\r\n+    return (\r\n+        <div className=\"min-h-screen bg-white p-6\">\r\n+            <div className=\"max-w-3xl mx-auto\">\r\n+                <h1 className=\"text-2xl font-bold mb-4\">{pollData.poll.title}</h1>\r\n+                <p className=\"mb-6\">{pollData.poll.description}</p>\r\n+\r\n+                {/* Voting Form */}\r\n+                <div className=\"mb-8\">\r\n+                    <h2 className=\"text-xl font-medium mb-4\">Pilih Jawaban:</h2>\r\n+                    {pollData.options.map((opt) => (\r\n+                        <div key={opt.id} className=\"mb-2\">\r\n+                            <label className=\"flex items-center gap-2\">\r\n+                                <input type=\"radio\" name=\"vote\" value={opt.id} />\r\n+                                {opt.text}\r\n+                            </label>\r\n+                        </div>\r\n+                    ))}\r\n+                    <button className=\"mt-4 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\">\r\n+                        Kirim Suara\r\n+                    </button>\r\n+                </div>\r\n+\r\n+                {/* Hasil Polling */}\r\n+                {canSeeResults && <PollResultChart results={results} />}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default PollDetailPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747281133746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import React, { useEffect, useState } from 'react';\r\n+import { useParams } from 'react-router-dom';\r\n+import { getPollDetails, exportPollResults } from '../services/api';\r\n+import PollResultChart from '../components/PollResultChart';\r\n+\r\n+const PollDetailPage = () => {\r\n+    const { id } = useParams();\r\n+    const [pollData, setPollData] = useState(null);\r\n+    const [canSeeResults, setCanSeeResults] = useState(false);\r\n+    const [results, setResults] = useState([]);\r\n+\r\n+    useEffect(() => {\r\n+        const fetchData = async () => {\r\n+            try {\r\n+                const data = await getPollDetails(id);\r\n+                setPollData(data.poll);\r\n+                setCanSeeResults(data.can_see_results);\r\n+\r\n+                if (data.can_see_results) {\r\n+                    const resultData = await exportPollResults(id);\r\n+                    setResults(resultData);\r\n+                }\r\n+            } catch (err) {\r\n+                alert(\"Polling tidak ditemukan\");\r\n+                window.location.href = \"/\";\r\n+            }\r\n+        };\r\n+        fetchData();\r\n+    }, [id]);\r\n+\r\n+    if (!pollData) return <p>Loading...</p>;\r\n+\r\n+    return (\r\n+        <div className=\"min-h-screen bg-white p-6\">\r\n+            <div className=\"max-w-3xl mx-auto\">\r\n+                <h1 className=\"text-2xl font-bold mb-4\">{pollData.poll.title}</h1>\r\n+                <p className=\"mb-6\">{pollData.poll.description}</p>\r\n+\r\n+                {/* Voting Form */}\r\n+                <div className=\"mb-8\">\r\n+                    <h2 className=\"text-lg font-medium mb-4\">Pilih Jawaban:</h2>\r\n+                 {pollData.options.map((opt) => (\r\n+                  <div key={opt.id} className=\"mb-2\">\r\n+                    <label className=\"flex items-center gap-2\">\r\n+                      <input type=\"radio\" name=\"vote\" value={opt.id} />\r\n+                      {opt.text}\r\n+                    </label>\r\n+                  </div>\r\n+                ))}\r\n+                    <button\r\n+                        type=\"submit\"\r\n+                        className=\"mt-4 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n+                    >\r\n+                        Kirim Suara\r\n+                    </button>\r\n+                </div>\r\n+\r\n+                {/* Hasil Polling */}\r\n+                {canSeeResults && <PollResultChart results={results} />}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default PollDetailPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747281140918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useEffect, useState } from 'react';\r\n import { useParams } from 'react-router-dom';\r\n-import { getPollDetails, exportPollResults } from '../services/api';\r\n+import { getPollDetails, exportPollResults } from '../service/api';\r\n import PollResultChart from '../components/pollResultChart';\r\n \r\n const PollDetailPage = () => {\r\n     const { id } = useParams();\r\n"
                },
                {
                    "date": 1747291584605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,90 @@\n+import React, { useEffect, useState } from 'react';\r\n+import { useParams } from 'react-router-dom';\r\n+import { getPollDetails, castVote } from '../services/api';\r\n+import PollResultChart from '../components/PollResultChart';\r\n+import VoteForm from '../components/VoteForm';\r\n+\r\n+const PollDetailPage = () => {\r\n+    const { id } = useParams();\r\n+    const [pollData, setPollData] = useState(null);\r\n+    const [results, setResults] = useState([]);\r\n+    const [canSeeResults, setCanSeeResults] = useState(false);\r\n+    const [voted, setVoted] = useState(false);\r\n+\r\n+    useEffect(() => {\r\n+        const fetchData = async () => {\r\n+            try {\r\n+                const data = await getPollDetails(id);\r\n+                setPollData(data.poll);\r\n+                setCanSeeResults(data.can_see_results);\r\n+\r\n+                if (data.results) {\r\n+                    setResults(data.results);\r\n+                }\r\n+            } catch (err) {\r\n+                alert(\"Polling tidak ditemukan\");\r\n+                window.location.href = \"/\";\r\n+            }\r\n+        };\r\n+\r\n+        fetchData();\r\n+    }, [id]);\r\n+\r\n+    const isParticipant = window.location.pathname.includes('api/polls');\r\n+\r\n+    const handleVote = async (optionID) => {\r\n+        const userKey = localStorage.getItem(`user_key_${id}`) || `user_${Date.now()}`;\r\n+        localStorage.setItem(`user_key_${id}`, userKey);\r\n+\r\n+        try {\r\n+            await castVote(id, optionID, userKey);\r\n+            setVoted(true);\r\n+            alert(\"Suara berhasil dikirim!\");\r\n+            window.location.reload();\r\n+        } catch (err) {\r\n+            alert(err.response?.data?.error || \"Gagal mengirim suara\");\r\n+        }\r\n+    };\r\n+\r\n+    if (!pollData) return <p>Loading...</p>;\r\n+\r\n+    return (\r\n+        <div className=\"min-h-screen bg-white p-6\">\r\n+            <div className=\"max-w-3xl mx-auto border rounded shadow-sm p-6\">\r\n+                <h1 className=\"text-2xl font-bold\">{pollData.poll.title}</h1>\r\n+                <p className=\"mb-4\">{pollData.poll.description}</p>\r\n+\r\n+                {/* Jika participant */}\r\n+                {isParticipant ? (\r\n+                    <>\r\n+                        <VoteForm options={pollData.options} onVote={handleVote} />\r\n+                        \r\n+                        {pollData.can_see_results && (\r\n+                            <PollResultChart results={results} />\r\n+                        )}\r\n+                    </>\r\n+                ) : (\r\n+                    /* Jika poll creator */\r\n+                    <>\r\n+                        <h2 className=\"mt-6 text-xl\">Tools Admin</h2>\r\n+                        <label className=\"flex items-center gap-2 mb-4\">\r\n+                            <input\r\n+                                type=\"checkbox\"\r\n+                                defaultChecked={pollData.poll.allow_realtime}\r\n+                                onChange={(e) => toggleRealtimeVisibility(id, e.target.checked)}\r\n+                            />\r\n+                            Izinkan lihat hasil saat aktif\r\n+                        </label>\r\n+\r\n+                        <button onClick={() => closePoll(id)}>Tutup Polling</button>\r\n+                        <button onClick={() => exportPollResults(id)}>Ekspor Hasil</button>\r\n+\r\n+                        <PollResultChart results={results} />\r\n+                    </>\r\n+                )}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default PollDetailPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747291591419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect, useState } from 'react';\r\n import { useParams } from 'react-router-dom';\r\n import { getPollDetails, castVote } from '../services/api';\r\n import PollResultChart from '../components/PollResultChart';\r\n-import VoteForm from '../components/VoteForm';\r\n+import VoteForm from '../components/voteForm';\r\n \r\n const PollDetailPage = () => {\r\n     const { id } = useParams();\r\n     const [pollData, setPollData] = useState(null);\r\n"
                }
            ],
            "date": 1747278537456,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst VoteForm = ({ pollID }) => {\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const [userKey, setUserKey] = useState(localStorage.getItem(`user_key_${pollID}`) || '');\r\n    const [voted, setVoted] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!selectedOption) {\r\n            setError(\"Silakan pilih salah satu opsi\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(`/api/polls/${pollID}/vote`, {\r\n                option_id: parseInt(selectedOption),\r\n                user_key: userKey || generateUserKey(),\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                alert(\"Terima kasih atas suaramu!\");\r\n                setVoted(true);\r\n            }\r\n        } catch (err) {\r\n            setError(err.response?.data?.error || \"Gagal memberikan suara\");\r\n        }\r\n    };\r\n\r\n    const generateUserKey = () => {\r\n        const key = `user_${Date.now()}`;\r\n        localStorage.setItem(`user_key_${pollID}`, key);\r\n        setUserKey(key);\r\n        return key;\r\n    };\r\n\r\n    const options = [\r\n        { id: 1, text: \"Sangat Baik\" },\r\n        { id: 2, text: \"Baik\" },\r\n        { id: 3, text: \"Biasa Saja\" },\r\n        { id: 4, text: \"Buruk\" }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"max-w-md mx-auto mt-6 p-4 bg-white shadow rounded\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Berikan Suaramu</h2>\r\n            \r\n            <form onSubmit={handleSubmit}>\r\n                {options.map((option) => (\r\n                    <div key={option.id} className=\"mb-2\">\r\n                        <label className=\"flex items-center gap-2\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"voteOption\"\r\n                                value={option.id}\r\n                                onChange={(e) => {\r\n                                    setSelectedOption(e.target.value);\r\n                                    setError(\"\");\r\n                                }}\r\n                                disabled={voted}\r\n                                className=\"w-4 h-4\"\r\n                            />\r\n                            <span>{option.text}</span>\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n\r\n                {error && <p className=\"mt-2 text-red-500\">{error}</p>}\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    disabled={voted}\r\n                    className={`mt-4 w-full py-2 px-4 ${\r\n                        voted ? 'bg-gray-400' : 'bg-blue-600 hover:bg-blue-700'\r\n                    } text-white rounded`}\r\n                >\r\n                    {voted ? \"Suara Telah Dikirim\" : \"Kirim Suara\"}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VoteForm;"
        }
    ]
}