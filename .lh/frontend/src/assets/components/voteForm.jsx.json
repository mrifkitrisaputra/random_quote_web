{
    "sourceFile": "frontend/src/assets/components/voteForm.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1747278197780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747278573585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,54 +1,87 @@\n+import React, { useState } from 'react';\r\n import axios from 'axios';\r\n-import { useState } from 'react';\r\n \r\n-export default function VoteForm({ pollID }) {\r\n-    const [optionId, setOptionId] = useState(1);\r\n-    const [userKey, setUserKey] = useState('');\r\n+const VoteForm = ({ pollID }) => {\r\n+    const [selectedOption, setSelectedOption] = useState('');\r\n+    const [userKey, setUserKey] = useState(localStorage.getItem(`user_key_${pollID}`) || '');\r\n+    const [voted, setVoted] = useState(false);\r\n+    const [error, setError] = useState('');\r\n \r\n-    const handleSubmit = async () => {\r\n+    const handleSubmit = async (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        if (!selectedOption) {\r\n+            setError(\"Silakan pilih salah satu opsi\");\r\n+            return;\r\n+        }\r\n+\r\n         try {\r\n-            await axios.post(`/api/polls/${pollID}/vote`, {\r\n-                option_id: optionId,\r\n+            const response = await axios.post(`/api/polls/${pollID}/vote`, {\r\n+                option_id: parseInt(selectedOption),\r\n                 user_key: userKey || generateUserKey(),\r\n             });\r\n-            alert(\"Vote berhasil dikirim\");\r\n-            window.location.reload();\r\n+\r\n+            if (response.status === 200) {\r\n+                alert(\"Terima kasih atas suaramu!\");\r\n+                setVoted(true);\r\n+            }\r\n         } catch (err) {\r\n-            alert(\"Gagal mengirim suara\");\r\n-            console.error(err);\r\n+            setError(err.response?.data?.error || \"Gagal memberikan suara\");\r\n         }\r\n     };\r\n \r\n     const generateUserKey = () => {\r\n-        const key = `user_${Math.random().toString(36).substr(2, 9)}`;\r\n-        localStorage.setItem('user_key', key);\r\n+        const key = `user_${Date.now()}`;\r\n+        localStorage.setItem(`user_key_${pollID}`, key);\r\n+        setUserKey(key);\r\n         return key;\r\n     };\r\n \r\n+    const options = [\r\n+        { id: 1, text: \"Sangat Baik\" },\r\n\\ No newline at end of file\n+        { id: 2, text: \"Baik\" },\r\n+        { id: 3, text: \"Biasa Saja\" },\r\n+        { id: 4, text: \"Buruk\" }\r\n+    ];\r\n+\r\n     return (\r\n         <div className=\"max-w-md mx-auto mt-6 p-4 bg-white shadow rounded\">\r\n-            <h2 className=\"text-xl font-bold mb-4\">Pilih Jawaban</h2>\r\n-            <select\r\n-                value={optionId}\r\n-                onChange={(e) => setOptionId(parseInt(e.target.value))}\r\n-                className=\"w-full p-2 mb-4 border\"\r\n-            >\r\n-                {/* Diisi dinamis via props */}\r\n-            </select>\r\n+            <h2 className=\"text-xl font-bold mb-4\">Berikan Suaramu</h2>\r\n+            \r\n+            <form onSubmit={handleSubmit}>\r\n+                {options.map((option) => (\r\n+                    <div key={option.id} className=\"mb-2\">\r\n+                        <label className=\"flex items-center gap-2\">\r\n+                            <input\r\n+                                type=\"radio\"\r\n+                                name=\"voteOption\"\r\n+                                value={option.id}\r\n+                                onChange={(e) => {\r\n+                                    setSelectedOption(e.target.value);\r\n+                                    setError(\"\");\r\n+                                }}\r\n+                                disabled={voted}\r\n+                                className=\"w-4 h-4\"\r\n+                            />\r\n+                            <span>{option.text}</span>\r\n+                        </label>\r\n+                    </div>\r\n+                ))}\r\n \r\n-            <input\r\n-                value={userKey}\r\n-                onChange={(e) => setUserKey(e.target.value)}\r\n-                placeholder=\"Masukkan nama/kunci voter\"\r\n-                className=\"w-full p-2 mb-4 border\"\r\n-            />\r\n+                {error && <p className=\"mt-2 text-red-500\">{error}</p>}\r\n \r\n-            <button\r\n-                onClick={handleSubmit}\r\n-                className=\"bg-blue-600 text-white px-4 py-2 w-full\"\r\n-            >\r\n-                Kirim Suara\r\n-            </button>\r\n+                <button\r\n+                    type=\"submit\"\r\n+                    disabled={voted}\r\n+                    className={`mt-4 w-full py-2 px-4 ${\r\n+                        voted ? 'bg-gray-400' : 'bg-blue-600 hover:bg-blue-700'\r\n+                    } text-white rounded`}\r\n+                >\r\n+                    {voted ? \"Suara Telah Dikirim\" : \"Kirim Suara\"}\r\n+                </button>\r\n+            </form>\r\n         </div>\r\n     );\r\n-}\n+};\r\n+\r\n+export default VoteForm;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1747278197780,
            "name": "Commit-0",
            "content": "import axios from 'axios';\r\nimport { useState } from 'react';\r\n\r\nexport default function VoteForm({ pollID }) {\r\n    const [optionId, setOptionId] = useState(1);\r\n    const [userKey, setUserKey] = useState('');\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            await axios.post(`/api/polls/${pollID}/vote`, {\r\n                option_id: optionId,\r\n                user_key: userKey || generateUserKey(),\r\n            });\r\n            alert(\"Vote berhasil dikirim\");\r\n            window.location.reload();\r\n        } catch (err) {\r\n            alert(\"Gagal mengirim suara\");\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const generateUserKey = () => {\r\n        const key = `user_${Math.random().toString(36).substr(2, 9)}`;\r\n        localStorage.setItem('user_key', key);\r\n        return key;\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-md mx-auto mt-6 p-4 bg-white shadow rounded\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Pilih Jawaban</h2>\r\n            <select\r\n                value={optionId}\r\n                onChange={(e) => setOptionId(parseInt(e.target.value))}\r\n                className=\"w-full p-2 mb-4 border\"\r\n            >\r\n                {/* Diisi dinamis via props */}\r\n            </select>\r\n\r\n            <input\r\n                value={userKey}\r\n                onChange={(e) => setUserKey(e.target.value)}\r\n                placeholder=\"Masukkan nama/kunci voter\"\r\n                className=\"w-full p-2 mb-4 border\"\r\n            />\r\n\r\n            <button\r\n                onClick={handleSubmit}\r\n                className=\"bg-blue-600 text-white px-4 py-2 w-full\"\r\n            >\r\n                Kirim Suara\r\n            </button>\r\n        </div>\r\n    );\r\n}"
        }
    ]
}