{
    "sourceFile": "frontend/src/assets/components/createPollForm.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1747277994944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747278354534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { useState } from 'react';\r\n import axios from 'axios';\r\n \r\n-export default function CreatePollForm({ onCreate }) {\r\n+const CreatePollForm({ onCreate }) {\r\n     const [title, setTitle] = useState('');\r\n     const [description, setDescription] = useState('');\r\n     const [options, setOptions] = useState(['', '', '']);\r\n     const [expiresAt, setExpiresAt] = useState('2025-12-31T23:59');\r\n"
                },
                {
                    "date": 1747278380504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,82 +1,95 @@\n-import { useState } from 'react';\r\n-import axios from 'axios';\r\n+import React, { useState } from 'react';\r\n+import { createPoll } from '../services/api';\r\n \r\n-const CreatePollForm({ onCreate }) {\r\n+const CreatePollForm = ({ onCreate }) => {\r\n     const [title, setTitle] = useState('');\r\n     const [description, setDescription] = useState('');\r\n-    const [options, setOptions] = useState(['', '', '']);\r\n+    const [options, setOptions] = useState(['']);\r\n     const [expiresAt, setExpiresAt] = useState('2025-12-31T23:59');\r\n     const [allowRealtime, setAllowRealtime] = useState(false);\r\n \r\n     const handleAddOption = () => setOptions([...options, '']);\r\n \r\n-    const handleSubmit = async (e) => {\r\n-        e.preventDefault();\r\n+    const handleOptionChange = (e, index) => {\r\n+        const newOptions = [...options];\r\n+        newOptions[index] = e.target.value;\r\n+        setOptions(newOptions);\r\n+    };\r\n+\r\n+    const handleSubmit = async () => {\r\n         const payload = {\r\n             title,\r\n             description,\r\n             options: options.filter(opt => opt.trim() !== ''),\r\n             expires_at: expiresAt,\r\n-            allow_realtime_results: allowRealtime,\r\n+            allow_realtime_results: allowRealtime\r\n         };\r\n \r\n         try {\r\n-            const res = await axios.post('/api/polls', payload);\r\n-            onCreate(res.data.poll_id, res.data.url);\r\n+            const data = await createPoll(payload);\r\n+            onCreate(data.poll_id, data.url);\r\n         } catch (err) {\r\n-            alert('Gagal membuat polling');\r\n+            alert(\"Gagal membuat polling\");\r\n             console.error(err);\r\n         }\r\n     };\r\n \r\n     return (\r\n-        <form onSubmit={handleSubmit} className=\"max-w-2xl mx-auto p-4\">\r\n+        <div className=\"max-w-lg mx-auto p-4 bg-white shadow rounded\">\r\n+            <h2 className=\"text-xl font-bold mb-4\">Buat Polling Baru</h2>\r\n+\r\n             <input\r\n                 value={title}\r\n                 onChange={(e) => setTitle(e.target.value)}\r\n-                placeholder=\"Judul Polling\"\r\n+                placeholder=\"Judul\"\r\n                 className=\"w-full p-2 mb-2 border rounded\"\r\n             />\r\n+\r\n             <textarea\r\n                 value={description}\r\n                 onChange={(e) => setDescription(e.target.value)}\r\n-                placeholder=\"Deskripsi polling\"\r\n+                placeholder=\"Deskripsi\"\r\n                 className=\"w-full p-2 mb-2 border rounded\"\r\n             />\r\n+\r\n             {options.map((opt, idx) => (\r\n                 <input\r\n                     key={idx}\r\n                     value={opt}\r\n-                    onChange={(e) => {\r\n-                        const newOpts = [...options];\r\n-                        newOpts[idx] = e.target.value;\r\n-                        setOptions(newOpts);\r\n-                    }}\r\n+                    onChange={(e) => handleOptionChange(e, idx)}\r\n                     placeholder={`Opsi ${idx + 1}`}\r\n                     className=\"w-full p-2 mb-2 border rounded\"\r\n                 />\r\n             ))}\r\n-            <button type=\"button\" onClick={handleAddOption} className=\"mb-2 text-blue-600 underline\">\r\n\\ No newline at end of file\n+\r\n+            <button type=\"button\" onClick={handleAddOption} className=\"mb-4 text-blue-600 underline\">\r\n                 Tambah Opsi\r\n             </button>\r\n-            <br />\r\n-            <label className=\"flex items-center gap-2\">\r\n+\r\n+            <label className=\"flex items-center gap-2 mb-4\">\r\n                 <input\r\n                     type=\"checkbox\"\r\n                     checked={allowRealtime}\r\n                     onChange={() => setAllowRealtime(!allowRealtime)}\r\n                 />\r\n                 Izinkan lihat hasil saat aktif\r\n             </label>\r\n+\r\n             <input\r\n                 type=\"datetime-local\"\r\n                 value={expiresAt}\r\n                 onChange={(e) => setExpiresAt(e.target.value)}\r\n-                className=\"w-full p-2 my-2\"\r\n+                className=\"w-full p-2 mb-4 border rounded\"\r\n             />\r\n-            <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded\">\r\n+\r\n+            <button\r\n+                onClick={handleSubmit}\r\n+                className=\"bg-blue-600 text-white px-4 py-2 w-full rounded\"\r\n+            >\r\n                 Buat Polling\r\n             </button>\r\n-        </form>\r\n+        </div>\r\n     );\r\n-}\n+};\r\n+\r\n+export default CreatePollForm;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747278398212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,95 +1,70 @@\n import React, { useState } from 'react';\r\n-import { createPoll } from '../services/api';\r\n+import { toggleVisibility, closePoll, deletePoll } from '../services/api';\r\n \r\n-const CreatePollForm = ({ onCreate }) => {\r\n-    const [title, setTitle] = useState('');\r\n-    const [description, setDescription] = useState('');\r\n-    const [options, setOptions] = useState(['']);\r\n-    const [expiresAt, setExpiresAt] = useState('2025-12-31T23:59');\r\n-    const [allowRealtime, setAllowRealtime] = useState(false);\r\n+const PollCard = ({ poll, onRefresh }) => {\r\n+    const [loading, setLoading] = useState(false);\r\n \r\n-    const handleAddOption = () => setOptions([...options, '']);\r\n+    const handleToggleVisibility = async () => {\r\n+        setLoading(true);\r\n+        await toggleVisibility(poll.id, !poll.allow_realtime);\r\n+        onRefresh();\r\n+        setLoading(false);\r\n+    };\r\n \r\n-    const handleOptionChange = (e, index) => {\r\n-        const newOptions = [...options];\r\n-        newOptions[index] = e.target.value;\r\n-        setOptions(newOptions);\r\n+    const handleCloseOperation = async () => {\r\n+        if (window.confirm(\"Tutup polling ini?\")) {\r\n+            setLoading(true);\r\n+            await closePoll(poll.id);\r\n+            onRefresh();\r\n+            setLoading(false);\r\n+        }\r\n     };\r\n \r\n-    const handleSubmit = async () => {\r\n-        const payload = {\r\n-            title,\r\n-            description,\r\n-            options: options.filter(opt => opt.trim() !== ''),\r\n-            expires_at: expiresAt,\r\n-            allow_realtime_results: allowRealtime\r\n-        };\r\n-\r\n-        try {\r\n-            const data = await createPoll(payload);\r\n-            onCreate(data.poll_id, data.url);\r\n-        } catch (err) {\r\n-            alert(\"Gagal membuat polling\");\r\n-            console.error(err);\r\n+    const handleDelete = async () => {\r\n+        if (window.confirm(\"Hapus polling ini?\")) {\r\n+            setLoading(true);\r\n+            await deletePoll(poll.id);\r\n+            onRefresh();\r\n+            setLoading(false);\r\n         }\r\n     };\r\n \r\n     return (\r\n-        <div className=\"max-w-lg mx-auto p-4 bg-white shadow rounded\">\r\n-            <h2 className=\"text-xl font-bold mb-4\">Buat Polling Baru</h2>\r\n+        <div className=\"border p-4 mb-4 rounded shadow-sm\">\r\n+            <h3 className=\"font-semibold\">{poll.title}</h3>\r\n+            <p>{poll.description}</p>\r\n+            <p>Status: <strong>{poll.status}</strong></p>\r\n+            <p>Jumlah Suara: {poll.vote_count}</p>\r\n \r\n-            <input\r\n-                value={title}\r\n-                onChange={(e) => setTitle(e.target.value)}\r\n-                placeholder=\"Judul\"\r\n-                className=\"w-full p-2 mb-2 border rounded\"\r\n-            />\r\n-\r\n-            <textarea\r\n-                value={description}\r\n-                onChange={(e) => setDescription(e.target.value)}\r\n-                placeholder=\"Deskripsi\"\r\n-                className=\"w-full p-2 mb-2 border rounded\"\r\n-            />\r\n-\r\n-            {options.map((opt, idx) => (\r\n+            <label className=\"flex items-center mt-2\">\r\n                 <input\r\n-                    key={idx}\r\n-                    value={opt}\r\n-                    onChange={(e) => handleOptionChange(e, idx)}\r\n-                    placeholder={`Opsi ${idx + 1}`}\r\n-                    className=\"w-full p-2 mb-2 border rounded\"\r\n-                />\r\n-            ))}\r\n-\r\n-            <button type=\"button\" onClick={handleAddOption} className=\"mb-4 text-blue-600 underline\">\r\n-                Tambah Opsi\r\n-            </button>\r\n\\ No newline at end of file\n-\r\n-            <label className=\"flex items-center gap-2 mb-4\">\r\n-                <input\r\n                     type=\"checkbox\"\r\n-                    checked={allowRealtime}\r\n-                    onChange={() => setAllowRealtime(!allowRealtime)}\r\n+                    checked={poll.allow_realtime || false}\r\n+                    onChange={handleToggleVisibility}\r\n+                    disabled={poll.status === \"closed\"}\r\n                 />\r\n-                Izinkan lihat hasil saat aktif\r\n+                <span className=\"ml-2\">Izinkan Lihat Hasil Saat Aktif</span>\r\n             </label>\r\n \r\n-            <input\r\n-                type=\"datetime-local\"\r\n-                value={expiresAt}\r\n-                onChange={(e) => setExpiresAt(e.target.value)}\r\n-                className=\"w-full p-2 mb-4 border rounded\"\r\n-            />\r\n+            <div className=\"mt-4 flex gap-2\">\r\n+                <button\r\n+                    onClick={handleCloseOperation}\r\n+                    disabled={poll.status === \"closed\" || loading}\r\n+                    className=\"bg-yellow-500 text-white px-3 py-1 rounded\"\r\n+                >\r\n+                    {poll.status === \"closed\" ? \"Sudah Ditutup\" : \"Tutup Polling\"}\r\n+                </button>\r\n \r\n-            <button\r\n-                onClick={handleSubmit}\r\n-                className=\"bg-blue-600 text-white px-4 py-2 w-full rounded\"\r\n-            >\r\n-                Buat Polling\r\n-            </button>\r\n+                <button\r\n+                    onClick={handleDelete}\r\n+                    disabled={loading}\r\n+                    className=\"bg-red-600 text-white px-3 py-1 rounded\"\r\n+                >\r\n+                    Hapus Polling\r\n+                </button>\r\n+            </div>\r\n         </div>\r\n     );\r\n };\r\n \r\n-export default CreatePollForm;\n+export default PollCard;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747279261919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState } from 'react';\r\n-import { toggleVisibility, closePoll, deletePoll } from '../services/api';\r\n+import { toggleVisibility, closePoll, deletePoll } from '../';\r\n \r\n const PollCard = ({ poll, onRefresh }) => {\r\n     const [loading, setLoading] = useState(false);\r\n \r\n"
                },
                {
                    "date": 1747279274911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+import React, { useState } from 'react';\r\n+import { toggleVisibility, closePoll, deletePoll } from '.';\r\n+\r\n+const PollCard = ({ poll, onRefresh }) => {\r\n+    const [loading, setLoading] = useState(false);\r\n+\r\n+    const handleToggleVisibility = async () => {\r\n+        setLoading(true);\r\n+        await toggleVisibility(poll.id, !poll.allow_realtime);\r\n+        onRefresh();\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    const handleCloseOperation = async () => {\r\n+        if (window.confirm(\"Tutup polling ini?\")) {\r\n+            setLoading(true);\r\n+            await closePoll(poll.id);\r\n+            onRefresh();\r\n+            setLoading(false);\r\n+        }\r\n+    };\r\n+\r\n+    const handleDelete = async () => {\r\n+        if (window.confirm(\"Hapus polling ini?\")) {\r\n+            setLoading(true);\r\n+            await deletePoll(poll.id);\r\n+            onRefresh();\r\n+            setLoading(false);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"border p-4 mb-4 rounded shadow-sm\">\r\n+            <h3 className=\"font-semibold\">{poll.title}</h3>\r\n+            <p>{poll.description}</p>\r\n+            <p>Status: <strong>{poll.status}</strong></p>\r\n+            <p>Jumlah Suara: {poll.vote_count}</p>\r\n+\r\n+            <label className=\"flex items-center mt-2\">\r\n+                <input\r\n+                    type=\"checkbox\"\r\n+                    checked={poll.allow_realtime || false}\r\n+                    onChange={handleToggleVisibility}\r\n+                    disabled={poll.status === \"closed\"}\r\n+                />\r\n+                <span className=\"ml-2\">Izinkan Lihat Hasil Saat Aktif</span>\r\n+            </label>\r\n+\r\n+            <div className=\"mt-4 flex gap-2\">\r\n+                <button\r\n+                    onClick={handleCloseOperation}\r\n+                    disabled={poll.status === \"closed\" || loading}\r\n+                    className=\"bg-yellow-500 text-white px-3 py-1 rounded\"\r\n+                >\r\n+                    {poll.status === \"closed\" ? \"Sudah Ditutup\" : \"Tutup Polling\"}\r\n+                </button>\r\n+\r\n+                <button\r\n+                    onClick={handleDelete}\r\n+                    disabled={loading}\r\n+                    className=\"bg-red-600 text-white px-3 py-1 rounded\"\r\n+                >\r\n+                    Hapus Polling\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default PollCard;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747279281314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState } from 'react';\r\n-import { toggleVisibility, closePoll, deletePoll } from '/';\r\n+import { toggleVisibility, closePoll, deletePoll } from './';\r\n \r\n const PollCard = ({ poll, onRefresh }) => {\r\n     const [loading, setLoading] = useState(false);\r\n \r\n"
                },
                {
                    "date": 1747279288337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState } from 'react';\r\n-import { toggleVisibility, closePoll, deletePoll } from '..';\r\n+import { toggleVisibility, closePoll, deletePoll } from '';\r\n \r\n const PollCard = ({ poll, onRefresh }) => {\r\n     const [loading, setLoading] = useState(false);\r\n \r\n"
                }
            ],
            "date": 1747277994944,
            "name": "Commit-0",
            "content": "import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function CreatePollForm({ onCreate }) {\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [options, setOptions] = useState(['', '', '']);\r\n    const [expiresAt, setExpiresAt] = useState('2025-12-31T23:59');\r\n    const [allowRealtime, setAllowRealtime] = useState(false);\r\n\r\n    const handleAddOption = () => setOptions([...options, '']);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            title,\r\n            description,\r\n            options: options.filter(opt => opt.trim() !== ''),\r\n            expires_at: expiresAt,\r\n            allow_realtime_results: allowRealtime,\r\n        };\r\n\r\n        try {\r\n            const res = await axios.post('/api/polls', payload);\r\n            onCreate(res.data.poll_id, res.data.url);\r\n        } catch (err) {\r\n            alert('Gagal membuat polling');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"max-w-2xl mx-auto p-4\">\r\n            <input\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder=\"Judul Polling\"\r\n                className=\"w-full p-2 mb-2 border rounded\"\r\n            />\r\n            <textarea\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                placeholder=\"Deskripsi polling\"\r\n                className=\"w-full p-2 mb-2 border rounded\"\r\n            />\r\n            {options.map((opt, idx) => (\r\n                <input\r\n                    key={idx}\r\n                    value={opt}\r\n                    onChange={(e) => {\r\n                        const newOpts = [...options];\r\n                        newOpts[idx] = e.target.value;\r\n                        setOptions(newOpts);\r\n                    }}\r\n                    placeholder={`Opsi ${idx + 1}`}\r\n                    className=\"w-full p-2 mb-2 border rounded\"\r\n                />\r\n            ))}\r\n            <button type=\"button\" onClick={handleAddOption} className=\"mb-2 text-blue-600 underline\">\r\n                Tambah Opsi\r\n            </button>\r\n            <br />\r\n            <label className=\"flex items-center gap-2\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={allowRealtime}\r\n                    onChange={() => setAllowRealtime(!allowRealtime)}\r\n                />\r\n                Izinkan lihat hasil saat aktif\r\n            </label>\r\n            <input\r\n                type=\"datetime-local\"\r\n                value={expiresAt}\r\n                onChange={(e) => setExpiresAt(e.target.value)}\r\n                className=\"w-full p-2 my-2\"\r\n            />\r\n            <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded\">\r\n                Buat Polling\r\n            </button>\r\n        </form>\r\n    );\r\n}"
        }
    ]
}