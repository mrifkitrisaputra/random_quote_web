{
    "sourceFile": "backand/services/vote_service.go",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1747213547035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747213964430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,22 @@\n-package services\n\\ No newline at end of file\n+package services\r\n+\r\n+import (\r\n+    \"database/sql\"\r\n+    \"fmt\"\r\n+\r\n+    \"quickpoll/config\"\r\n+)\r\n+\r\n+func CastVote(pollID string, optionID int, userKey string) error {\r\n+    var count int\r\n+    err := config.DB.QueryRow(\"SELECT COUNT(*) FROM votes WHERE poll_id = ? AND user_key = ?\", pollID, userKey).Scan(&count)\r\n+    if err != nil {\r\n+        return err\r\n+    }\r\n+    if count > 0 {\r\n+        return fmt.Errorf(\"already voted\")\r\n+    }\r\n+\r\n+    _, err = config.DB.Exec(\"INSERT INTO votes (poll_id, option_id, user_key) VALUES (?, ?, ?)\", pollID, optionID, userKey)\r\n+    return err\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747213970709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,22 @@\n+package services\r\n+\r\n+import (\r\n+    \"database/sql\"\r\n+    \"fmt\"\r\n+\r\n+    \"backand/config\"\r\n+)\r\n+\r\n+func CastVote(pollID string, optionID int, userKey string) error {\r\n+    var count int\r\n+    err := config.DB.QueryRow(\"SELECT COUNT(*) FROM votes WHERE poll_id = ? AND user_key = ?\", pollID, userKey).Scan(&count)\r\n+    if err != nil {\r\n+        return err\r\n+    }\r\n+    if count > 0 {\r\n+        return fmt.Errorf(\"already voted\")\r\n+    }\r\n+\r\n+    _, err = config.DB.Exec(\"INSERT INTO votes (poll_id, option_id, user_key) VALUES (?, ?, ?)\", pollID, optionID, userKey)\r\n+    return err\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747214139952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n package services\r\n \r\n import (\r\n-    \"database/sql\"\r\n     \"fmt\"\r\n \r\n     \"backand/config\"\r\n )\r\n@@ -18,27 +17,5 @@\n     }\r\n \r\n     _, err = config.DB.Exec(\"INSERT INTO votes (poll_id, option_id, user_key) VALUES (?, ?, ?)\", pollID, optionID, userKey)\r\n     return err\r\n-}\n-package services\r\n-\r\n-import (\r\n-    \"database/sql\"\r\n-    \"fmt\"\r\n-\r\n-    \"quickpoll/config\"\r\n-)\r\n-\r\n-func CastVote(pollID string, optionID int, userKey string) error {\r\n-    var count int\r\n-    err := config.DB.QueryRow(\"SELECT COUNT(*) FROM votes WHERE poll_id = ? AND user_key = ?\", pollID, userKey).Scan(&count)\r\n-    if err != nil {\r\n-        return err\r\n-    }\r\n-    if count > 0 {\r\n-        return fmt.Errorf(\"already voted\")\r\n-    }\r\n-\r\n-    _, err = config.DB.Exec(\"INSERT INTO votes (poll_id, option_id, user_key) VALUES (?, ?, ?)\", pollID, optionID, userKey)\r\n-    return err\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747235881529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,12 +7,20 @@\n )\r\n \r\n func CastVote(pollID string, optionID int, userKey string) error {\r\n     var count int\r\n-    err := config.DB.QueryRow(\"SELECT COUNT(*) FROM votes WHERE poll_id = ? AND user_key = ?\", pollID, userKey).Scan(&count)\r\n+    err := config.DB.QueryRow(\"SELECT COUNT(*) FROM poll_options WHERE id = ? AND poll_id = ?\", optionID, pollID).Scan(&count)\r\n     if err != nil {\r\n         return err\r\n     }\r\n+    if count == 0 {\r\n+        return fmt.Errorf(\"invalid option_id for this poll\")\r\n+    }\r\n+\r\n+    err = config.DB.QueryRow(\"SELECT COUNT(*) FROM votes WHERE poll_id = ? AND user_key = ?\", pollID, userKey).Scan(&count)\r\n+    if err != nil {\r\n+        return err\r\n+    }\r\n     if count > 0 {\r\n         return fmt.Errorf(\"already voted\")\r\n     }\r\n \r\n"
                }
            ],
            "date": 1747213547035,
            "name": "Commit-0",
            "content": "package services"
        }
    ]
}